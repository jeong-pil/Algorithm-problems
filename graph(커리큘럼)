from collections import deque
import copy

#진입차수, 그래프, 간선의 비용 초기화
v=int(input())
indegree[0]*(v+1)
graph=[[] for i in range(v+1)]
time=[0]*(v+1)

#데이터를 입력받고 시간과 노드간의 연결 입력
for i in range(1,v+1):
    data=list(map(int,input().split()))
    time[i]=data[0]
    for x in data[1:-1]:
        indegree[i]+=1
        graph[x].append(i)

#위상정렬 함수
def topology_sort():
    result=copy.deepcopy(time) #알고리즘 수행 결과를 담을 리스트
    q=deque()
    for i in range(1,v+1):
        if indegree[i]==0:
            q.append(i)
    while q:
        now=q.popleft()
        for i in graph[now]:
            indegree[i]-=1
            result[i]=max(result[i],result[now]+time[i])
            if indegree[i]==0:
                q.append(i)
    for i in range(1,v+1):
        print(result[i])
        
topology_sort()
